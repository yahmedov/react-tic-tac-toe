{"version":3,"sources":["App.js","index.js"],"names":["Square","_ref","value","onSquareClick","_jsx","className","onClick","children","Board","_useState","useState","_useState2","_slicedToArray","xIsNext","setXIsNext","_useState3","Array","fill","_useState4","squares","setSquares","handleClick","i","calculateWinner","nextSquares","slice","status","winner","_jsxs","_Fragment","lines","length","_lines$i","a","b","c","createRoot","document","getElementById","render","StrictMode","App"],"mappings":"qKAEA,SAASA,EAAMC,GAA4B,IAAzBC,EAAKD,EAALC,MAAOC,EAAaF,EAAbE,cACvB,OAAOC,cAAA,UAAQC,UAAU,SAASC,QAASH,EAAcI,SACtDL,GAEL,CAEe,SAASM,IACtB,IAAAC,EAA8BC,oBAAS,GAAKC,EAAAC,YAAAH,EAAA,GAArCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,EAA8BL,mBAASM,MAAM,GAAGC,KAAK,OAAMC,EAAAN,YAAAG,EAAA,GAApDI,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAE1B,SAASG,EAAYC,GACnB,IAAIH,EAAQG,KAAMC,EAAgBJ,GAAlC,CAGA,IAAMK,EAAcL,EAAQM,QAE1BD,EAAYF,GADVT,EACe,IAEA,IAEnBO,EAAWI,GACXV,GAAYD,EARZ,CASF,CAEA,IACIa,EADEC,EAASJ,EAAgBJ,GAQ/B,OALEO,EADEC,EACO,WAAaA,EAEb,iBAAmBd,EAAU,IAAM,KAI5Ce,eAAAC,WAAA,CAAAtB,SAAA,CACEH,cAAA,OAAKC,UAAU,SAAQE,SAAEmB,IACzBE,eAAA,OAAKvB,UAAU,YAAWE,SAAA,CACxBH,cAACJ,EAAM,CAACE,MAAOiB,EAAQ,GAAIhB,cAAe,kBAAMkB,EAAY,EAAE,IAC9DjB,cAACJ,EAAM,CAACE,MAAOiB,EAAQ,GAAIhB,cAAe,kBAAMkB,EAAY,EAAE,IAC9DjB,cAACJ,EAAM,CAACE,MAAOiB,EAAQ,GAAIhB,cAAe,kBAAMkB,EAAY,EAAE,OAEhEO,eAAA,OAAKvB,UAAU,YAAWE,SAAA,CACxBH,cAACJ,EAAM,CAACE,MAAOiB,EAAQ,GAAIhB,cAAe,kBAAMkB,EAAY,EAAE,IAC9DjB,cAACJ,EAAM,CAACE,MAAOiB,EAAQ,GAAIhB,cAAe,kBAAMkB,EAAY,EAAE,IAC9DjB,cAACJ,EAAM,CAACE,MAAOiB,EAAQ,GAAIhB,cAAe,kBAAMkB,EAAY,EAAE,OAEhEO,eAAA,OAAKvB,UAAU,YAAWE,SAAA,CACxBH,cAACJ,EAAM,CAACE,MAAOiB,EAAQ,GAAIhB,cAAe,kBAAMkB,EAAY,EAAE,IAC9DjB,cAACJ,EAAM,CAACE,MAAOiB,EAAQ,GAAIhB,cAAe,kBAAMkB,EAAY,EAAE,IAC9DjB,cAACJ,EAAM,CAACE,MAAOiB,EAAQ,GAAIhB,cAAe,kBAAMkB,EAAY,EAAE,SAItE,CAEA,SAASE,EAAgBJ,GAYvB,IAXA,IAAMW,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGAR,EAAI,EAAGA,EAAIQ,EAAMC,OAAQT,IAAK,CACrC,IAAAU,EAAApB,YAAkBkB,EAAMR,GAAE,GAAnBW,EAACD,EAAA,GAAEE,EAACF,EAAA,GAAEG,EAACH,EAAA,GACd,GAAIb,EAAQc,IAAMd,EAAQc,KAAOd,EAAQe,IAAMf,EAAQc,KAAOd,EAAQgB,GACpE,OAAOhB,EAAQc,EAEnB,CACA,OAAO,IACT,CCrEaG,qBAAWC,SAASC,eAAe,SAC3CC,OACHnC,cAACoC,aAAU,CAAAjC,SACTH,cAACqC,EAAG,M","file":"static/js/main.c490dc8a.chunk.js","sourcesContent":["import { useState } from 'react';\n\nfunction Square({ value, onSquareClick }) {\n  return <button className='square' onClick={onSquareClick}>\n    {value}\n  </button>\n}\n\nexport default function Board() {\n  const [xIsNext, setXIsNext] = useState(true);\n  const [squares, setSquares] = useState(Array(9).fill(null));\n\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = 'X';\n    } else {\n      nextSquares[i] = 'O';\n    }    \n    setSquares(nextSquares);\n    setXIsNext(!xIsNext);\n  }\n\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n  }\n\n  return (\n    <>\n      <div className='status'>{status}</div>\n      <div className='board-row'>\n        <Square value={squares[0]} onSquareClick={() => handleClick(0)} />\n        <Square value={squares[1]} onSquareClick={() => handleClick(1)} />\n        <Square value={squares[2]} onSquareClick={() => handleClick(2)} />\n      </div>\n      <div className='board-row'>\n        <Square value={squares[3]} onSquareClick={() => handleClick(3)} />\n        <Square value={squares[4]} onSquareClick={() => handleClick(4)} />\n        <Square value={squares[5]} onSquareClick={() => handleClick(5)} />\n      </div>\n      <div className='board-row'>\n        <Square value={squares[6]} onSquareClick={() => handleClick(6)} />\n        <Square value={squares[7]} onSquareClick={() => handleClick(7)} />\n        <Square value={squares[8]} onSquareClick={() => handleClick(8)} />\n      </div>\n    </>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n","import React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './styles.css';\n\nimport App from './App';\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);"],"sourceRoot":""}