{"version":3,"sources":["App.js","index.js"],"names":["Square","_ref","value","onSquareClick","_jsx","className","onClick","children","Board","_useState","useState","_useState2","_slicedToArray","xIsNext","setXIsNext","_useState3","Array","fill","_useState4","squares","setSquares","handleClick","i","calculateWinner","nextSquares","slice","status","winner","includes","_jsxs","_Fragment","lines","length","_lines$i","a","b","c","createRoot","document","getElementById","render","StrictMode","App"],"mappings":"qKAEA,SAASA,EAAMC,GAA4B,IAAzBC,EAAKD,EAALC,MAAOC,EAAaF,EAAbE,cACvB,OAAOC,cAAA,UAAQC,UAAU,SAASC,QAASH,EAAcI,SACtDL,GAEL,CAEe,SAASM,IACtB,IAAAC,EAA8BC,oBAAS,GAAKC,EAAAC,YAAAH,EAAA,GAArCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,EAA8BL,mBAASM,MAAM,GAAGC,KAAK,OAAMC,EAAAN,YAAAG,EAAA,GAApDI,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAE1B,SAASG,EAAYC,GACnB,IAAIH,EAAQG,KAAMC,EAAgBJ,GAAlC,CAGA,IAAMK,EAAcL,EAAQM,QAE1BD,EAAYF,GADVT,EACe,IAEA,IAEnBO,EAAWI,GACXV,GAAYD,EARZ,CASF,CAEA,IACIa,EADEC,EAASJ,EAAgBJ,GAU/B,OAPEO,EADEC,EACO,WAAaA,EACZR,EAAQS,SAAS,MAGlB,iBAAmBf,EAAU,IAAM,KAFnC,yBAMTgB,eAAAC,WAAA,CAAAvB,SAAA,CACEH,cAAA,OAAKC,UAAU,SAAQE,SAAEmB,IACzBG,eAAA,OAAKxB,UAAU,YAAWE,SAAA,CACxBH,cAACJ,EAAM,CAACE,MAAOiB,EAAQ,GAAIhB,cAAe,kBAAMkB,EAAY,EAAE,IAC9DjB,cAACJ,EAAM,CAACE,MAAOiB,EAAQ,GAAIhB,cAAe,kBAAMkB,EAAY,EAAE,IAC9DjB,cAACJ,EAAM,CAACE,MAAOiB,EAAQ,GAAIhB,cAAe,kBAAMkB,EAAY,EAAE,OAEhEQ,eAAA,OAAKxB,UAAU,YAAWE,SAAA,CACxBH,cAACJ,EAAM,CAACE,MAAOiB,EAAQ,GAAIhB,cAAe,kBAAMkB,EAAY,EAAE,IAC9DjB,cAACJ,EAAM,CAACE,MAAOiB,EAAQ,GAAIhB,cAAe,kBAAMkB,EAAY,EAAE,IAC9DjB,cAACJ,EAAM,CAACE,MAAOiB,EAAQ,GAAIhB,cAAe,kBAAMkB,EAAY,EAAE,OAEhEQ,eAAA,OAAKxB,UAAU,YAAWE,SAAA,CACxBH,cAACJ,EAAM,CAACE,MAAOiB,EAAQ,GAAIhB,cAAe,kBAAMkB,EAAY,EAAE,IAC9DjB,cAACJ,EAAM,CAACE,MAAOiB,EAAQ,GAAIhB,cAAe,kBAAMkB,EAAY,EAAE,IAC9DjB,cAACJ,EAAM,CAACE,MAAOiB,EAAQ,GAAIhB,cAAe,kBAAMkB,EAAY,EAAE,SAItE,CAEA,SAASE,EAAgBJ,GAYvB,IAXA,IAAMY,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGAT,EAAI,EAAGA,EAAIS,EAAMC,OAAQV,IAAK,CACrC,IAAAW,EAAArB,YAAkBmB,EAAMT,GAAE,GAAnBY,EAACD,EAAA,GAAEE,EAACF,EAAA,GAAEG,EAACH,EAAA,GACd,GAAId,EAAQe,IAAMf,EAAQe,KAAOf,EAAQgB,IAAMhB,EAAQe,KAAOf,EAAQiB,GACpE,OAAOjB,EAAQe,EAEnB,CACA,OAAO,IACT,CCvEaG,qBAAWC,SAASC,eAAe,SAC3CC,OACHpC,cAACqC,aAAU,CAAAlC,SACTH,cAACsC,EAAG,M","file":"static/js/main.f1dc0809.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nfunction Square({ value, onSquareClick }) {\r\n  return <button className='square' onClick={onSquareClick}>\r\n    {value}\r\n  </button>\r\n}\r\n\r\nexport default function Board() {\r\n  const [xIsNext, setXIsNext] = useState(true);\r\n  const [squares, setSquares] = useState(Array(9).fill(null));\r\n\r\n  function handleClick(i) {\r\n    if (squares[i] || calculateWinner(squares)) {\r\n      return;\r\n    }\r\n    const nextSquares = squares.slice();\r\n    if (xIsNext) {\r\n      nextSquares[i] = 'X';\r\n    } else {\r\n      nextSquares[i] = 'O';\r\n    }\r\n    setSquares(nextSquares);\r\n    setXIsNext(!xIsNext);\r\n  }\r\n\r\n  const winner = calculateWinner(squares);\r\n  let status;\r\n  if (winner) {\r\n    status = 'Winner: ' + winner;\r\n  } else if (!squares.includes(null)) {\r\n    status = 'Game Over! No one wins'\r\n  } else {\r\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='status'>{status}</div>\r\n      <div className='board-row'>\r\n        <Square value={squares[0]} onSquareClick={() => handleClick(0)} />\r\n        <Square value={squares[1]} onSquareClick={() => handleClick(1)} />\r\n        <Square value={squares[2]} onSquareClick={() => handleClick(2)} />\r\n      </div>\r\n      <div className='board-row'>\r\n        <Square value={squares[3]} onSquareClick={() => handleClick(3)} />\r\n        <Square value={squares[4]} onSquareClick={() => handleClick(4)} />\r\n        <Square value={squares[5]} onSquareClick={() => handleClick(5)} />\r\n      </div>\r\n      <div className='board-row'>\r\n        <Square value={squares[6]} onSquareClick={() => handleClick(6)} />\r\n        <Square value={squares[7]} onSquareClick={() => handleClick(7)} />\r\n        <Square value={squares[8]} onSquareClick={() => handleClick(8)} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","import React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './styles.css';\n\nimport App from './App';\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);"],"sourceRoot":""}